<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>迁移 on 元视角</title><link>https://qinyuanpei.github.io/tags/%E8%BF%81%E7%A7%BB/</link><description>Recent content in 迁移 on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Jan 2020 10:23:08 +0000</lastBuildDate><atom:link href="https://qinyuanpei.github.io/tags/%E8%BF%81%E7%A7%BB/index.xml" rel="self" type="application/rss+xml"/><item><title>从 .NET Core 2.2 升级到 3.1 的踩坑之旅</title><link>https://qinyuanpei.github.io/posts/3099575458/</link><pubDate>Wed, 22 Jan 2020 10:23:08 +0000</pubDate><guid>https://qinyuanpei.github.io/posts/3099575458/</guid><description>有时候，版本更新太快并不是一件好事。虽然，两周一个迭代的“敏捷”开发依然被客户嫌弃交付缓慢，可一边是前端领域“求不要再更新了，学不动了”的声音，一边则是.NET Core从1.x到2.x再到3.x的高歌猛进。版本更新太快，带来的是API的频繁变动，无法形成有效的知识沉淀，就像转眼到了2020年，Python 2.x和Windows 7都引来了“寿终正寝”，可能你都还没有认真地学习过这些知识，突然就被告知这些知识要过期了，想想还是觉得挺疯狂啊。最近一直在捣鼓，如何让.NET Core应用跑在Heroku平台上，因为Docker镜像里使用最新的.NET Core 3.1运行时，所以，痛定思痛之余，决定把手头项目升级到3.1。上一次痛苦还是在2.1升级2.2，这还真没过多长时间。所以呢，这篇博客主要梳理下从2.2升级到3.1过程中遇到的问题。
更新项目文件 调整目标框架为netcoreapp3.1 删除引用项：Microsoft.AspNetCore.App、Microsoft.AspNetCore.Razor.Design 删除AspNetCoreHostingModel，如果项目文件中的值为InProcess(因为ASP.NET Core 3.0 或更高版本项目默认为进程内承载模型） 更新程序入口 CreateWebHostBuilder()方法的返回值类型由IWebHostBuilder调整为IHostBuilder 增加引用项：Microsoft.Extensions.Hosting Kestrel配置变更至ConfigureWebHostDefaults()方法 public static IHostBuilder CreateWebHostBuilder(string[] args) =&amp;gt;Host.CreateDefaultBuilder(args).ConfigureWebHostDefaults(webBuilder =&amp;gt;{webBuilder.ConfigureKestrel(serverOptions =&amp;gt;{// Set properties and call methods on options}).UseStartup&amp;lt;Startup&amp;gt;();}); 如果通过 HostBuilder手动创建宿主，则需要在 ConfigureWebHostDefaults()方法中显式调用·UseKestrel()：
public static void Main (string[] args) {var host = new HostBuilder ().UseContentRoot (Directory.GetCurrentDirectory ()).ConfigureWebHostDefaults (webBuilder =&amp;gt; {webBuilder.UseKestrel (serverOptions =&amp;gt; {// Set properties and call methods on options}).</description></item></channel></rss>