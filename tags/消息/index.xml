<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>消息 on 元视角</title><link>https://qinyuanpei.github.io/tags/%E6%B6%88%E6%81%AF/</link><description>Recent content in 消息 on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 15 Jan 2016 12:30:41 +0000</lastBuildDate><atom:link href="https://qinyuanpei.github.io/tags/%E6%B6%88%E6%81%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Unity3D 中基于订阅者模式实现事件机制</title><link>https://qinyuanpei.github.io/posts/632291273/</link><pubDate>Fri, 15 Jan 2016 12:30:41 +0000</pubDate><guid>https://qinyuanpei.github.io/posts/632291273/</guid><description>&lt;p>各位朋友，大家好，欢迎大家关注我的博客，我是秦元培，我的博客地址是：&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。今天博主想和大家分享的是在 Unity3D 中基于订阅者模式实现消息传递机制，我们知道 Unity3D 中默认提供了一种消息传递机制 SendMessage，虽然 SendMessage 使用起来的确非常简单，可是它的这种简单是建立在付出一定的代价的基础上的。经常有朋友提及不同的模块间如何进行通信的问题，可能答案最终会落到&lt;strong>单例模式&lt;/strong>、&lt;strong>委托&lt;/strong>和&lt;strong>事件机制&lt;/strong>这些关键词上，在这种情况下本文所探讨的内容可能会帮助你找到最终的答案。&lt;/p></description></item></channel></rss>