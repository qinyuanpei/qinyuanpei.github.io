<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>思考 on 元视角</title><link>http://example.org/tags/%E6%80%9D%E8%80%83/</link><description>Recent content in 思考 on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 23 Sep 2024 12:52:10 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E6%80%9D%E8%80%83/index.xml" rel="self" type="application/rss+xml"/><item><title>温故而知新：后端通用查询方案的再思考</title><link>http://example.org/posts/review-and-rethink-backend-universal-query-solutions/</link><pubDate>Mon, 23 Sep 2024 12:52:10 +0000</pubDate><guid>http://example.org/posts/review-and-rethink-backend-universal-query-solutions/</guid><description>最近，我一直在体验 Cursor 这款产品，与先前的 CodeGeex、通义灵码 等 “插件类” 产品相比，Cursor 在产品形态上更接近 Github Copilot。在多项测评中，Cursor 甚至一度超越了 Github Copilot。尽管我没有体验过 Github Copilot，但从用户体验的角度来看，Cursor 基于 VS Code 进行了深度定制。除了基础的代码自动补全功能外，它还可以允许你从原型图生成代码、将整个工程作为 Codebase、一键应用代码到本地。最令我印象深刻的是，它指导我完成了一个 Vue 的小项目，从零开始。诚然，“幻觉” 的存在让它在 Vue 2 和 Vue 3 之间反复横跳，其编程能力的提升主要得益于 Claude 3.5 系列模型，可我还是像《三体》中的杨冬一样感到震惊：物理学不存在了，那前端呢？有人说，程序员真正的护城河是沟通能力，因为执行层面的工作可以交给 AI。实际上，我并不担心 AI 取代人类，我更倾向于与 AI 沟通和合作，你可能想象不到，这篇文章中的思考正是来自于我和 Claude 老师的日常交流。
CRUD Boys 的日常 程序员普遍喜欢自嘲，以博主为例，作为一名后端工程师，我的日常工作主要就是 CRUD，因此，你可以叫我们 CRUD Boys。鲁迅先生曾作《自嘲》一诗，“破帽遮颜过闹市，漏船载酒泛中流”。面对软件世界里里的复杂性和不确定性，如果没有乐观的心态和耐心，哪怕是最基础的 CRUD，你不见得就能做到得心应手。你可能听说过这样一句话，“上岸第一剑，先斩意中人”，AI 领域的第一把火，永远烧向程序员自己，自打一众 AI 辅助编程工具问世以来，各种程序员被 AI 取代的声音不绝于耳，甚至 Cursor 可以在 45 分钟内让一个 8 岁小孩搭建出聊天网站，更不必说，在 OpenAI 发布全新的 o1 模型后，很多人觉得连提示工程、Agent 这些东西都不存在了。其实，代码生成、低代码/无代码相关的技术一直都存在，在很久以前，我们就在通过 T4 模板生成业务代码，自不必说各种代码生成器。截止到目前，Excel 依然是这个地球上最强大的低代码工具，可又有谁能掌握 Excel 的全部功能呢?
你猜用 Cursor 写一个这样的页面需要多久？退一步讲，即使的最简单的 CRUD，虽然业务的推进会不断地演化出新的问题。譬如，当你为了加快查询效率引入了缓存，你需要去解决数据库和缓存一致性、缓存失效等问题；当你发现数据库读/写不平衡引入读写分离、分库分表，你就需要去解决主从一致、分布式事务、跨库查询等问题；当你发现单点性能不足引入了多机器、多线程，你需要去解决负载均衡、线程同步等问题……单单一个查询就如此棘手，你还会觉得后端的 CRUD 简单吗？我承认，后端的确都是 CRUD，可在不同的维度上这些 CRUD 并不完全相同，譬如，分布式的相关算法如 Paxos、Raft 等，难道不是针对分布式环境中的节点做 CRUD 吗？可此时你还会觉得它简单吗？Cursor 的确可以帮你生成代码，但真正让它出圈的是背后的 Claude 模型。我始终相信某位前辈曾经讲过的话：“没有银弹”，在软件行业里，复杂度永远不会消失，它只会以一种新的方式出现。如果你觉得 CRUD 简单，或许是你从未接触过那些千姿百态的查询接口：</description></item><item><title>RAG 的是与非、Rewrite 和 Rerank</title><link>http://example.org/posts/the-true-or-false-rewrite-rerank-of-rag/</link><pubDate>Fri, 26 Apr 2024 09:29:47 +0000</pubDate><guid>http://example.org/posts/the-true-or-false-rewrite-rerank-of-rag/</guid><description>有时候，我觉得人类还真是种擅长画地为牢的动物，因为突然发现，当人们以文化/理念的名义形成团体/圈子的时候，其结局都不可避免地走向了筛选和区分的道路。或许，大家都不约而同地笃信，在成年人的世界里，那条不成文的社交潜规则——“只筛选不教育，只选择不改变”。与千百年前百家争鸣不同，团体/圈子间并不热衷于交流，倒像是一种标签化的分类方式，甚至是一种非黑即白的二元分类方式。比如，通常人们认为男性不能讨论女性主义，可我经常在女性主义视角下看到对男性的讨论。女性朋友们一致认为，女性种种不幸完全是由男性以及男性背后的父权造成的。于是，在小红书上打着不被定义的标签的女性们，自顾自地定义着别人。亦或者，在这个内卷的世界里，人们被互相定义、被资本定义、被用户画像定义、被美颜相机定义……这种种的定义，最终会成为我们所有人的宿命。鲁迅先生说，中国人的性情是喜欢调和折中的，对此我表示怀疑。因为，以如今的现状而言，中国人或许更喜欢玉石俱焚。在我看来，标签是定义、是附和、是选择，无论我们是否知晓，那条路是否能代表未来。
是非善恶 最近，Meta 发布了 Llama3，一时风光无二。微软不甘示弱，紧随其后发布了 Phi-3。曾经，我认为在小红书上检索信息比百度更高效，可当我批评完百度的竞价排名后，我发现小红书上的广告问题更严重，特别是 AI 的加入让这一问题愈发严重。回到 AI 话题，最近人们对于大模型的态度大致可以总结为：对 Llama3 和 Phi-3 寄予厚望，认为它们接近 GPT-4 的水平，而对 OpenAI 以及 GPT-5 的前景则持续看衰。我不太关心这些预期，我在意的是新模型发布以后，各路牛鬼蛇神都可以活跃起来。小红书上有一篇帖子提到，Llama3 的发布使得本地化 RAG 更有意义，并分享了一个使用 LlamaIndex 实现 RAG 的案例，随后是小红书上经典的套路：私信、拉群、发链接。我对帖子中的观点保留态度，因为 Llama3 作为大型模型，主要解决的是推理问题；而 RAG 是检索 + 生成的方案，其核心在于提高检索的召回率，即：问题与文本块之间的相关性。显然，无论 Llama3 是否发布，RAG 都能正常落地。大型模型的推理能力，影响的是最终的生成结果，而非检索的召回率。
最简单的 RAG 范式故事的结局是我遭到了反驳，对方质疑我对 RAG 的理解，并建议我阅读她主页的某个帖子，据说是 RAG 论文作者在斯坦福的讲课内容。我原本是打算去学习的，可戏剧性的是，我被对方拉黑了。我还能再说什么呢？当然选择原谅对方。为了证明我对 RAG 的理解没有偏差，我决定分享我最近对于 Rewrite 和 Rerank 的体悟。我想明确指出的是，无需使用 Llama3，只要提升检索部分的召回率，RAG 方案完全可以实施。实际上，我们甚至都不需要 GPT-4 级别的模型，选择一个合适的小模型足矣。我意识到，我最大的错误在于，试图在一个以信息差为生意的人面前打破信息壁垒，帮助他人摆脱知识的诅咒。正如我之前所述，某些团体或圈子的目的并非促进信息流通和交流，而是为了向特定的人群提供通行证，以便在来来往往的人群中筛选和区分同类。或许，你会认为你已经筛选出你想要的人，但从更广阔的视角来看，这不过是另一种傲慢与偏见。当然，你们权利忽视这些问题，就像我不在乎周围环境如何一样。作为一个崇尚科学的人，我只关心真理，除非你的真理更为真实。
实现 Rewrite 在 RAG 的语境中，Rewrite 是重写或者改写的意思。此时，诸位或许会困惑，为什么需要对用户输入的问题进行二次加工呢？在程序员群体中，有一本非常经典的书 ——《提问的智慧》，其核心观点是：在技术的世界里，当你提出一个问题时，最终能否得到有用的答案，往往取决于你提问和追问的方式。以此作为类比，众所周知，人类的输入通常随性而模糊，特别是在使用自然语言作为交互媒介的时候。在这种情况下，大语言模型难以准确理解人类的真实意图。因此，就需要对用户的原始查询进行改写，通过生成多个语义相似但是表述不同的问题，来提高或增强检索的多样性和覆盖面。由于重写后的查询会变得更为具体，故而，Rewrite 在缩小检索范围、提高检索相关性方面有一定的优势。例如，下面的提示词实现了对用户输入的改写：
通过提示词实现 Rewrite 实际效果如何呢？我们可以分别在 Kimi 和 ChatGPT 中进行测试。如下图所示，左边为 Kimi，右边为 ChatGPT：</description></item><item><title>杂感·七月寄望</title><link>http://example.org/posts/miscellaneous-feelings-of-july/</link><pubDate>Sat, 16 Jul 2022 22:49:47 +0000</pubDate><guid>http://example.org/posts/miscellaneous-feelings-of-july/</guid><description>桃花潭里没有桃花，正如老婆饼里没有老婆，只要你没有期待，就永远不会失落。不同的是，长安这座城市，难保不会教人想起，那桩发生在天宝年间的人类早期电信诈骗事件。相传，对李白仰慕已久的汪伦，深知李白好饮酒、喜游历，便诚恳地给李白写了一封信，称当地有万家酒楼、十里桃花。李白听闻以后，欣然前往，结果万家酒楼变成了万氏酒楼、十里桃花变成了桃花渡口。可即便如此，李白还是被汪伦的盛情打动，在临别时写下那首脍炙人口的诗篇《赠汪伦》。如果仔细考究一番的话，这个桃花潭也许在安徽，而想到李白就会想到的长安，李白总共不过待了三年，从这个角度看，桃花潭这个名字或许是长安沾了李白的光。乘着三号线地铁从地下转为地上，依次经过桃花潭、广运大桥、世博园，三四年前的我，还是一个喜欢掺和草莓音乐节的文青，而如今再度故地重游的时候，七月的桃花潭已经零零星星地浮起荷花，对我而言，我的七月就是从这里开始的，仿佛某种不一样的风景。
刺杀首相 熟悉我的朋友，应该都知道我喜欢玩《刺客信条》这款游戏，我曾经和康师傅一起见证波士顿倾茶事件、参与邦克山战役，我曾经和谢伊一起在里斯本大地震中心有余悸，我曾经和爱德华一起目睹黑胡子惨死在面前……作为一名刺客，我经常在游戏中刺杀各种历史人物，譬如约翰·彼凯恩、查尔斯·李、劳伦斯·华盛顿……等等，可当一件真实的刺杀事件发生在自己的有生之年，这种感觉更多的是一种震惊。因为我以往对刺杀的认知，更多的是像荆轲刺秦、安重根刺杀伊藤博文、宗次郎刺杀大久保利通(参见浪客剑心)、裴迪南夫妇遇刺引发一战、美国总统肯尼迪遇刺……毫无例外，这些事情对我来说都是相当久远的事情，其模糊程度丝毫不亚于我出生那一年苏联解体，而这一次它就真实地发生在我三十岁的人生节点上，所以，它带给我的冲击是完全不同的。事情发生以后，人们的心态显得非常微妙，因为有幸灾乐祸的，更有深谋远虑的。面对好事，人们就觉得那难以触及的远方和自己息息相关；面对坏事，人们就觉得“今朝有酒今朝醉”、“各人自扫门前雪”那是正道的光。
以刺杀为主题的游戏：刺客信条在伊坂幸太郎的《金色梦乡》里，曾虚构过一起刺杀日本首相的案件。主人公青柳是一个普通的宅急送司机，在他平淡如水的生活里，唯一的高光时刻是两年前救过某个女明星。在被好友森田约出来钓鱼之后，他就被卷入到了这起刺杀日本首相的案件当中，从公众眼中的正义化身，被迫变成政府的通缉犯。在这场国家机器和个体的对抗中，面对突如其来的构陷，再无后路可言的青柳，不得不靠着人类最大的武器——习惯和信赖，展开一场惊心动魄的生死大逃亡。在现实生活中，人们无一例外地都喜欢看到一个公众人物从神坛上跌落下来。因此，当冰冷的体制对弱势的个体实施迫害的时候，最好的办法就是令对方的形象彻底失真。人们常说，为了更多的人，牺牲掉一小部分人在所难免，可在一个常态的社会里，遇到非常时期人们该如何自处？如果牺牲掉的一小部分人里刚好有你，你又该如何展开自救？就像这将近三年的新冠疫情，频频被顶上热搜的报道，固然是我们希望别人看见的，可在我们看不见的地方，是否还有我们看不见的牺牲？即使他们是像青柳一样，并不是罪犯或者真正对社会有危害的危险人物。
同名电影《金色梦乡》剧照：众生金色梦乡 我以为，人类的情感是建立在某个事件上的共同记忆，譬如青柳一行人大学毕业后在烟花厂一起打工，前女友始终记得男主用拇指按压电梯按键的习惯，以及男主和父母独特而隐晦的报平安的方式……正是这些情感的连接点，构成了这本书里最温情的一面。十一月的仙台，在这场蓄谋已久的阴谋里，或许是冰冷刺骨的，可当漫天烟花凌空绽放时，一定会有某个人在某个地方与我心意相通，那一刻披头士的 Golden Slumbers 在耳边响起，年少时的故梦、逃亡途中留下的眼泪和汗水、终于以一种炽热的状态在夜空中快速熔化，而后又复归于平淡和冰冷。那天，看完《人生大事》，从电影院出来我就发了条朋友圈，大意说，以后死了做成烟花好像是种不错的选择。我不知道，这是不是一种呼应，就像披头士的歌词里写道，“曾经有一条回家的路”，可到故事结尾的时候，青柳已经再找不回曾经的自己，他通过整容手术改头换面，以一个新的身份继续生活下去，而那些美好的回忆，终于还是变成，再也无法回头的金色梦乡，即使是对成为“优等”人的青柳雅春而言。
同名电影《金色梦乡》剧照：烟火所以，大概还是要感谢伊坂幸太郎，亲手了编织这样一场梦。这段时间，书实在没有怎么看，因为自从得知 Kindle 要退出中国市场，忍不住一声喟叹，甚至连带着对微信读书的好感都有所影响，倒不是我厚此薄彼，实在是这段时间接触到了新的媒介——播客，在某种意义上，是比微信读书更适合拿来听的一种介质。这一切的契机来自早见 Hayami，一开始是因为她在上海疫情期间写的一篇文章《我在方舱，看见老人们的孤岛求生》。后来，就听了她的两期播客，听她讲亲密关系、讲“言语犹如微小剂量的砷”。对于这个只有 26 岁的年轻人，我折服于她文笔之细腻、观点之新颖。可有的时候，我觉得她像是变了一个人，动辄喜欢输出群体性失望情绪，比如典型的“男人不行”。作为一个写作者，我当然知道，写别人愿意听到的声音，更容易带来流量，可如果你被读者的声音绑架，你就会失去创作的自主性。有时候，我觉得男人和女人仿佛是来自两个星球的生物，女人抱怨说，这个世界上没有正常的男人；而男人亦抱怨说，这个世界上没有正常的女人。可讽刺的是，这个正常的定义都掌握在对方手中，人人都不想被别人定义，可人人又都想要定义别人。如果我说我支持平权，你们是不是依然会对我口诛笔伐，就像大家都忘了安倍是“骑墙派”这件事情一样。有时候，看到前任经常在网上掺和这些事情，我唯有感慨，这终究是我回不去的金色梦乡啊……
同名电影《金色梦乡》剧照：涅槃双标现场 当然，人类对待事物的看法，不单单会受性别这种非此即彼的的因素的影响，哪怕是同一个因素，依然摆脱不了如宿命一般的双标。朋友 T 君家中亲人去世，此君不无遗憾地说到，“老人家才活了 80 多岁就走了”，对于这种说法，我深以为然，毕竟从我 18 岁开始，每年都会听到，“你都多少多少岁了”，类似这样的话来，我们总是催促着小孩长大，又像哄小孩一样安抚着老人。如此一来，小孩仓促间长大，突然背负起时代和家庭给予的期望、责任；而老人略显笨拙地拨弄着智能手机，拐杖上贴满了各种各样的核酸贴纸，生怕因为落后被这个时代嫌弃。对此，我想说：都挺好。2022 年注定是一个多事之秋，除了隔三差五卷土重来的疫情，俄乌冲突、安倍遇刺、约翰逊辞职、斯里兰卡破产、断供潮……，每一件事情看起来都可以写入历史教科书，只是我越来越难以回答，造成这些事件的直接原因和根本原因分别是什么。也许，这些问题到底是需要后人来回答，我有我的历史局限性和阶级局限性。我甚至不知道，安倍遇刺这个事件会不会成为育碧未来的素材，可从一名刺客信条玩家的角度来看，山上徹也实在算不上一名好的刺客。
真正的刺客：十步杀一人，千里不留行这个月月初，我在豆瓣的下厨房小组发了篇帖子，整理了我平时经常做的快手饭菜，没想到网友们对我的厨艺还是有一点认同的，不像某个人一直蹭我的饭，还整天对我的厨艺颇有微词。这让我意识到，做饭这件事情是具有私密性的，因为每个人对饭菜的口感、喜好各不相同，甚至吃饭这件事情在每个人心中的重要性亦有所差别。我是一个对吃和穿没什么太高要求的人，上班带饭很大原因上是为了省钱，所以，我不能理解有的人嚷嚷着带红烧肉是什么心态。做饭的人都知道，做饭 80% 的工作量都在前期准备阶段，所以，作为一个每天早上起来做饭的人，我必须让自己避开那些复杂的菜式。因为，说到底，我是一个怕麻烦的人，向来不喜欢麻烦别人。对吃饭的人而言，只要带上嘴巴和筷子就行，可对做饭的人来说，不单单要关心买菜做菜，还要关心柴米油盐酱醋茶、关心洗碗刷锅。写到这里的时候，我大概明白了，做家务这件事情到底累在哪里，所谓的眼里有活儿还是没活儿，更多的是角色与身份上的认知差异。一旦想通了这一点，你就没必要再为这件事情纠结。因为，于我而言，所谓吃饭的仪式感，一大半都在做饭的过程中，我最喜欢三下五除二、风卷残云的感觉啦！
同名电影《金色梦乡》剧照：优等总体而言，不论国家与国家之间，还是人与人之间，这个世界总是在不遗余力地寻求表面的平衡，而过于寻求平衡的这个过程，注定是逆人性、反人类的，就像我们都在寻求长期稳定的亲密关系，可两个人之间的关系，并不完全遵循万有引力定律，而是像磁场、像风、像雨一样有强有弱，换言之，这种关系并不稳定，并且将永远处于动态平衡之中。毕竟，没有人喜欢世界上到处都是被操控着的提线木偶，比起表面上的平衡，保持这个世界原本的质感，是不是要显得更为重要一点呢？</description></item><item><title>支持外部链接跳转的 Vue Router 扩展实现</title><link>http://example.org/posts/implementation-of-vue-router-extension-that-supports-external-link/</link><pubDate>Tue, 12 Jul 2022 22:49:47 +0000</pubDate><guid>http://example.org/posts/implementation-of-vue-router-extension-that-supports-external-link/</guid><description>众所周知，Vue Router 是 Vue 中重要的插件之一，特别是在当下流行的 单页面应用/SPA 中，这种感觉会越来越明显。此时，路由的作用就是根据 URL 来决定要显示什么内容。诚然，页面这个概念在工程/模块中依然存在，可当你开始关注最终发布的产物时，你会发现本质上它只有一个页面。无论你选择 hash 或者是 history 模式的路由，它都像是在同一张纸上反复写写画画，让你看起来觉得它有很多个不同的页面。回顾早期的前端项目，它往往会有多个不同的页面组成，我们是通过一个个的超链接来实现不同页面间的跳转。如今，这一切都已一去不复返，我们只能在单页面应用的世界里继续披荆斩棘。当然，绝大多数的普通用户无法感知到这种程度的变化，在他们的眼中，那依然不过是普通的一个超链接。那么，当一个项目中充斥着各种各样的超链接的时候，这个问题就值得我们单独拿出来讲一讲。所以，今天这篇博客的主题是路由和外部链接。请注意，这是一组相对通用的概念，不受限于任何一个前端框架，我们只是选择了使用 Vue 来进行说明。
问题现状 我们的项目存在着大量的超链接以及导航菜单，在 UI 设计阶段，通常不会有人关心，一个链接到底是内部链接还是外部链接。与此同时，由于 HTML 这门标记语言的极大灵活性，实现一个导航链接的方式有 N 多种，可以是一个 a 标签，可以是一个 div 标签，甚至可以是一个 span 标签。虽然 Vue Router 里提供了 router-link 组件，可在实际的项目中，需要综合考虑团队风格和第三方 UI 库的因素，甚至有时候，再没有设计规范的情况下，可能大家连 router-link 组件都不愿意用或者说压根就没机会用。
这样就造成一个非常尴尬的局面，当你需要为页面编写业务代码的时候，你不得不在各种各样的超链接上浪费时间，只要不是通过 a 标签实现的，你都必须处理它点击的事件，更不必说，你还要区分这个链接是一个内部链接还是一个外部链接，原因是 Vue Router 不支持外部链接，你不得不通过 window.location 或者 window.open() 的这样的方式来实现“曲线救国”，试想，如果每一个都这么折腾一遍，你还会觉得有趣吗？
而在我们的项目里，实际上它还需要从网页端唤起应用，这样便又涉及到了 URL Schemes 这个话题。除了 Android 和 iOS 这个平台上的差异，单单就 Windows 而言，其基于注册表的方案对协议提供者的约束并不强，如果团队内对此没有任何规范的话，你将面对各种千奇百怪的参数传递方式。听到这里，你是不是感觉头都大了一圈？如果因为某种原因，它还需要你每次都传递一个令牌过去，你告诉我，你准备如何让这一切的混乱与不堪重新归于宁静呢？
学如逆水行舟，不进则退改进思路 OK，现在假设，我们制止这场混乱的方式，是强迫大家都去使用 router-link 这个组件，虽然它最终渲染出来就是一个 a 标签。相信参加工作以后，大家都会有这样一种感觉，那就是工作中 99.9% 的事情，都是在最好和最坏中间选一个过渡状态，然后不断地为之投入精力或者叫做填坑，甚至有很多东西，从来都不是为了让一件事情变得更好而存在。作为这个地球上脆弱而渺小的个体，时间、生命、爱，每一样东西都像缓缓从指尖滑落的沙子，我们实在是太喜欢这种可以掌控点什么的感觉了。所以，如果一件事情没法从道理或者科学上讲通的话，那就用制度或者规范来作为武器，在一个连国家都可以宣布破产的年代，大概，话语权比是非对错更重要。因此，在博主的博客里，在这小小的一方天地里，不妨假设我有这种话语权，可以强迫大家都使用 router-link 这个组件。我们讲，Vue Router 不支持外部链接，一个非常直观的理由是，当我们写出下面的代码时，它会完全辜负我们的期望：</description></item><item><title>写在冬阳升起以前</title><link>http://example.org/posts/2145169599/</link><pubDate>Fri, 26 Nov 2021 08:48:41 +0000</pubDate><guid>http://example.org/posts/2145169599/</guid><description>某个冬天的清晨突然间想要写点什么，或许是我终于发觉，一个人内心的疲惫感，是会像水里泛起的涟漪一样，一圈圈地向远方散开去，直至在某个时刻产生了共振，这种感觉就仿佛是，冬天的清晨，于雾气中升起的太阳，虽然无法令你感受到炽热，可依然会令你感到刺目甚至眩晕，圣人有云，“劳心者治人，劳力者治于人”，而这种劳心又劳力的状态，属实是一个普通打工人，经常要去面对的一件事情，因此，我想要说的，本质上是一种薛定谔的状态，它代表着温暖，代表着光明，可以给你生存所需要的一切，可于此同时，它又代表着炽热，代表着煎熬，可以毫无顾忌地灼伤你裸露的心。
就像一下子击中内心似的，我渐渐意识到，这个世界上的工作，本质上只有两种，一种是问题本身特别难，需要更多的心智上的投入，譬如数学、计算机图形学、物理碰撞等等，一个有意思的事情是，国产单机游戏《古剑奇谭3》和《仙剑奇侠传7》，男主的剑都是直接“浮空”地背在人物身上的，甚至都没有剑鞘，而《巫师3》据说光是一个拔剑/收剑就借助了相当多的技术手段，这其中最大的问题在于穿模，尤其是国产游戏都喜欢给武器加各种发光特效，很多时候为了避免穿模的尴尬，不得不在刀/剑入鞘以后隐藏刀/剑刃这部分的模型，所以，这一类问题有时候属于“看起来简单，实现起来复杂”，联想到曾经有产品经理和程序员因为需求而大打出手的新闻，你就不难理解，人们对于难易程度的认知差异，其实是非常大的，原因就在于，人们无法确定这到底属于那一类问题，有人关注整体，就有人关注局部，就像人的眼睛，视锥体永远有一个范围，这无疑让人类永远只能看到一部分，这似乎会成为某种宿命，本身就很难的问题，大概就是无论从整体还是局部来看，难度都没有变化的问题。此前，有同事要计算客户的分层活跃度，我虽然知道这是一个关乎数学期望的问题，可因为我早就忘记了怎么去算概率密度函数，所以，这个问题我只知道方向而无从下手，换句话说，本身就很难的问题，并不会因为场景的转换而发生变化。
而相对地，第二种是问题本身不难，但因为流程、方案、组织等因素而变得复杂，不幸的是，我们在生活和工作中遇到的都是这种情况。我们总安慰自己说，买菜做饭用不到高等数学，其实，从某个角度来看，是因为作为普通人的你我，完全没有机会接触到这种“难题”。当然，我并不否认，这种因为复杂度提升而带来的挑战性。联想到最近网上报道的甘肃大爷花132万改造房子的新闻，我终于意识到，工程上的问题是无所谓科学与否的，因为无论装修工艺如何演进，技术与艺术的鸿沟始终存在。软件行业更是类似，不论我们使用多么先进的技术或是框架，多年来羁绊不前的其实是需求分析。我始终不明白，人可以靠着感觉去做一件事情，就好像设计师陶磊可以用傲慢和偏见去替老人做出选择一样，而我们这个行业可以在需求没落实的情况下仓促开发。如果说这两者间有什么本质上的不同，大概摸不着的软件和代码可以永无止境地修改吧！那么，当大爷的红砖毛坯房墙体开始反碱的时候，这是肉眼看得见的崩塌，可代码世界里的崩塌，又有谁会在乎呢？我们又太多太多的难度，完全是自己构建出来的，也许，这样能让大家看起来都在忙碌吧……
熟悉我的人，都知道我是一个怕麻烦的人，这种惰性，一旦体现在工作上，就表现为对繁琐、重复的厌倦，厌倦含糊不清的规则，厌倦似是而非的表达。每次工作上别人找我问问题，我更希望，对方可以用一句话说清楚他的疑虑，而不是每次都挥手示意我“过来”，我以为这是某种表达能力的欠缺，可很多时候，尤其是研发工作中的来来回回，这种沟通更像是一种“剧本杀”，每个人都利用手中的信息来拼凑出一个故事，然后互相从对方的故事中寻找破绽。这种感觉有时候会让我觉得麻烦，是不是隐隐约约有什么东西再让事情变得复杂起来，虽然我确信，熵增定律一定会让事物的复杂度变高，可假如这一切可以避免呢？我们都听过一个词——内耗，譬如，最典型的想太多、自我否定等等，一个人精神层面的自我内耗会让整个人都变得焦灼起来，而这种问题，如果反映到一个团队或者组织中，大概就是将错就错，“磨刀不误砍柴工”，可如果所有人都宁愿拿着一把生锈的刀去砍柴呢？有的人能忍受这样一把生锈的刀，有的人一定要用瑞士军刀才有生产力，而这就是分歧。
我一直觉得，我是那个站在技术与人文十字路口的那个人，甚至我能将这种东西完美融合在一起，毕竟，对于一个19岁前写诗的程序员来说，本质上都属于输入/输出的一个过程。可多年以后，我渐渐发现，我是一个重视实用性超过艺术性的人，也许，是技术给了我这种实用主义思维，当我发现我通过 Blender 建模无法调出甜甜圈的颜色的时候，我隐隐约约地从材质编辑器中找到了一点当年写 Shader 时的感觉，我终于理解了当初关于 CSS 不正交的说法，那就是，当一件事情有多种方式可以做到的时候，对于普通人而言，困难已不再是实现这件事情，而是做出选择，装修这项工程是这样，日常的研发工作还是这样，甚至人生都是这样，我们从来到这个世界的那一天起，无数种世界观、人生观、价值观开始交织和缠绕，我们清楚地知道人生的结局是什么，以至于这个真相都不在重要，毕竟，我们每天经历的事情，一直都在教你做出选择，以及不断合理化这个选择，人们常说，选择比努力更重要，那么，聪明的你，你说，哪一件事情更难？</description></item></channel></rss>