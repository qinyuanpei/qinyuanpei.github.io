<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PL/SQL on 元视角</title><link>https://qinyuanpei.github.io/tags/pl/sql/</link><description>Recent content in PL/SQL on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 19 Apr 2019 12:52:10 +0000</lastBuildDate><atom:link href="https://qinyuanpei.github.io/tags/pl/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>由 DBeaver 与 PL/SQL 引发的数据库吐槽</title><link>https://qinyuanpei.github.io/posts/337943766/</link><pubDate>Fri, 19 Apr 2019 12:52:10 +0000</pubDate><guid>https://qinyuanpei.github.io/posts/337943766/</guid><description>因为工作中需要同时面向 MySQL、Oracle 和 SQLServer 三种数据库进行开发，所以，大概从去年国庆节开始，我开始使用一个开源的数据库管理工具——DBeaver。
使用这个工具的初衷，是因为我不想在同一台电脑上安装三个客户端工具，尤其是 Oracle 和 SQLServer 这种令人恐惧的、动辄需要重装系统的应用程序。我不想再使用类似 Navicat 这样的软件，因为它的画风像是上个世纪 VB6.0 的产品一样，同理，我不喜欢用 PL/SQL，因为我每次都要瞪大眼睛，在它狭窄而拥挤的画面上找表、找视图，更有甚者，有时要去找触发器、找存储过程。直到我同事给我发了一个几十 M 的文档，我突然间意识到，这货居然还要安装 Oracle 的客户端，配置数据库连接要手动去改配置文件，我一点都不喜欢 PL/SQL。
除了这三种经典的关系型数据库，我们还会用 Memcache 和 Redis 这样的内存数据库，Mongodb 这样的非关系型数据库，所以，我希望有一个统一的入口来管理这些连接，毕竟我身边的同事会使用三种以上的工具，譬如 Sqlyog、PL/SQL、SQLServer 等来处理这些工作，恰好 DBeaver 可以满足我 80% 的工作需要。目前，DBeaver 企业版支持关系型数据库和非关系型数据库，而社区版仅支持关系型数据库。
可最近在写 Oracle 环境的触发器(存储过程和触发器都是万恶之源)时，我发现 DBeaver 和 PL/SQL 在面对同一段 SQL 脚本时，居然因为一点点语法上的差异而不兼容，这让我内心深处不由得想对 Oracle 吐槽一番。这是一个什么样的 SQL 脚本呢？我们一起来看下面的例子：
CREATE OR REPLACE TRIGGER &amp;#34;TRI_SYNC_ITEM_VALUE&amp;#34; BEFORE DELETE ON &amp;#34;or_line&amp;#34; FOR EACH ROW DECLARE v_item_value NUMBER(18,6); BEGIN SELECT ITEM_VALUE INTO v_item_value FROM &amp;#34;order_info&amp;#34; WHERE ORDER_GID = :OLD.</description></item></channel></rss>