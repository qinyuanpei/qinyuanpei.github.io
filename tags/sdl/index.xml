<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SDL on 元视角</title><link>http://example.org/tags/sdl/</link><description>Recent content in SDL on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 27 Jul 2015 08:48:59 +0000</lastBuildDate><atom:link href="http://example.org/tags/sdl/index.xml" rel="self" type="application/rss+xml"/><item><title>SDL 游戏开发系列第二话：基本图形的绘制</title><link>http://example.org/posts/3789971938/</link><pubDate>Mon, 27 Jul 2015 08:48:59 +0000</pubDate><guid>http://example.org/posts/3789971938/</guid><description>&lt;p>各位朋友，大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是：&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。话题紧接上回，在上回我们讲到了 SDL 的下载、安装和配置并对 SDL 游戏有了初步的了解。我们知道游戏开发中最为基础的内容是图形的绘制，因此在我们学习 SDL 游戏开发的过程中我们同样要从最简单的图形绘制开始学习。在 2D 游戏开发中，精灵（Sprite）是一个基础而核心的内容，具体来讲精灵首先是一张 2D 图片，精灵的绘制从本质上是图片的绘制，所以这是一个基础的内容。因为精灵在 2D 游戏中承担着 GameObject 的重要角色，所以一个图形引擎对精灵的支持好坏会决定游戏设计的最终效果。今天这篇文章主要是通过使用 SDL 中的 SDL_LoadBMP()、SDL_CreateTextureFromSurface()和 SDL_RenderCopy()这三个方法来实现在 SDL 中基本图形的绘制，从整体上尚属较为简单的内容。可是从学习 SDL 游戏开发的角度来看，一切都值得我们深入地去研究。好了，这就开始吧！&lt;/p></description></item><item><title>SDL 游戏开发系列第一话：Hello SDL</title><link>http://example.org/posts/183718218/</link><pubDate>Sat, 25 Jul 2015 15:19:01 +0000</pubDate><guid>http://example.org/posts/183718218/</guid><description>&lt;p>各位读者朋友大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。从今天起博主将带领大家一起走进 SDL 游戏开发的世界，如果说此前的 Unity3D 游戏开发系列文章让大家感受到的是游戏引擎工具化开发的方便与快捷，那么这一次就让我们以 SDL 库为基础，通过了解游戏开发中的底层图形渲染、输入事件响应等内容来全面认识游戏引擎，博主为 SDL 游戏开发系列文章建立了专栏，大家可以通过&lt;a href="http://blog.csdn.net/column/details/sdlgame.html">这里&lt;/a>获取所有的系列文章，希望大家能够喜欢！好了，作为&lt;a href="http://blog.csdn.net/column/details/sdlgame.html"> SDL 游戏开发系列&lt;/a>的第一篇文章，按照技术性文章写作的国际惯例这将是一篇介绍 SDL 入门内容的文章，因此这篇文章叫做：Hello SDL。&lt;/p></description></item></channel></rss>