<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SSH-Key on 元视角</title><link>https://qinyuanpei.github.io/tags/ssh-key/</link><description>Recent content in SSH-Key on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 30 Jan 2024 12:30:47 +0000</lastBuildDate><atom:link href="https://qinyuanpei.github.io/tags/ssh-key/index.xml" rel="self" type="application/rss+xml"/><item><title>如何为 Git 配置多个 SSH Key</title><link>https://qinyuanpei.github.io/posts/how-to-configure-multiple-ssh-keys-for-git/</link><pubDate>Tue, 30 Jan 2024 12:30:47 +0000</pubDate><guid>https://qinyuanpei.github.io/posts/how-to-configure-multiple-ssh-keys-for-git/</guid><description>在电视剧《繁花》里有这样一个情节，汪小姐和宝总在一起时喜欢吃排骨年糕，后来两人分道扬镳，汪小姐用 “从此想，排骨是排骨，年糕是年糕” 这句对白来概括两个人的关系。不得不说，这句伤感中带着点文艺的台词，在受到剧粉及书迷追捧的同时，更是戳中了无数吃货的心。排骨年糕好不好吃，我不晓得。我唯一知道的事情是，人们需要亲密关系，可人们同样需要界限和距离感，排骨和年糕，就像是工作和生活，当我们意识到 “工作是工作，生活是生活” 的时候，或许我们就能达到真正的 “Work-Life Balance”。那么，对于程序员来说，工作和生活的界限在哪里呢？我想，这一切或许可以从为 Git 配置多个 SSH Key 说起。
相信大家都会遇到这种场景，即一台电脑上同时存在多个 Git 账号的情况。譬如，公司的项目使用 Gitlab 托管，而个人的项目使用 Github 托管，更不必说，云效、Gitee、码云、Coding 等形形色色的平台。在这种情况下，你需要为每个代码托管平台生成 SSH Key，然后将其对应的公钥复制到指定的位置。所以，如何让这些不同托管平台的 SSH Key 和平共处、互不影响呢？这就是今天这篇文章想要分享的冷知识。当然，对博主个人而言，最主要的目的，还是希望能将公司和个人两个身份区分开来，所以，下面以 Github 和 Gitlab 为例来展示具体的配置过程。
生成 SSH Key 首先，为两个平台生成各自的 SSH Key，使用 ssh-keygen 命令即可:
ssh-keygen -t rsa -C &amp;#34;&amp;lt;公司邮箱&amp;gt;&amp;#34; -f ~/.ssh/company-ssh ssh-keygen -t rsa -C &amp;#34;&amp;lt;个人邮箱&amp;gt;&amp;#34; -f ~/.ssh/personal-ssh 考虑到安全性问题，现在更推荐使用 Ed2519 加密算法，此时，你只需要替换上述命令中的 rsa 为 ed2519 即可。
配置 Config 接下来，我们需要为本地的 SSH 配置上个步骤中生成的两个 SSH Key。通常，这个配置文件存在于以下路径：
Linux: ~/.ssh/config Windows: C:\Users\&amp;lt;Your-User&amp;gt;\.ssh\config 如果在 Windows 系统下找不到该文件，我们直接创建一个无扩展名的文本文件即可：</description></item></channel></rss>