<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>人脸分类 on 元视角</title><link>https://qinyuanpei.github.io/tags/%E4%BA%BA%E8%84%B8%E5%88%86%E7%B1%BB/</link><description>Recent content in 人脸分类 on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 14 Jan 2025 12:52:10 +0000</lastBuildDate><atom:link href="https://qinyuanpei.github.io/tags/%E4%BA%BA%E8%84%B8%E5%88%86%E7%B1%BB/index.xml" rel="self" type="application/rss+xml"/><item><title>基于 K-Means 聚类分析实现人脸照片的快速分类</title><link>https://qinyuanpei.github.io/posts/face-photo-fast-classification-using-k-means-clustering/</link><pubDate>Tue, 14 Jan 2025 12:52:10 +0000</pubDate><guid>https://qinyuanpei.github.io/posts/face-photo-fast-classification-using-k-means-clustering/</guid><description>注：本文在创作过程中得到了 ChatGPT、DeepSeek、Kimi 的智能辅助支持，由作者本人完成最终审阅。
在 “视频是不能 P 的” 系列文章中，博主曾先后分享过人脸检测、人脸识别等相关主题的内容。今天，博主想和大家讨论的是人脸分类问题。你是否曾在人群中认错人，或是盯着熟人的照片却一时想不出对方的名字？这种 “脸盲症” 的困扰，不仅在生活中令人感到尴尬，在整理照片时更是让人头疼不已。想象一下，某次聚会结束后，你的手机里存了上百张照片——有你的笑脸、朋友的自拍，甚至还有一部分陌生面孔混杂其中。手动将这些照片按人物分类，不仅费时费力，还可能会因为 “脸盲” 而频繁出错。此时，你是否期待有一种技术，可以像魔法一样，自动将这些照片按人物分类？事实上，这种 “魔法” 已经存在，它的名字叫做 K-Means 聚类分析。作为一种经典的无监督学习算法，K-Means 能够通过分析人脸特征，自动将相似的面孔归类到一起，完全无需人工干预。接下来，为了彻底根治 “脸盲症”，我们将详细介绍如何使用 K-Means 聚类分析来实现这一目标，哈利·波特拥有魔法，而我们则拥有科技。
实现过程 如图所示，我们将按照下面的流程来达成 “自动分类人脸” 这一目标。其中，Dlib 负责提取人脸特征向量、Scikit-Learn 中的 K-Means 负责聚类分析、Matplotlib 负责结果的可视化：
基于 K-Means 聚类分析实现人脸照片的快速分类示意图K-Means 简介 K-Means 是一种广泛应用的聚类算法，其基本原理是将数据集分成 K 个簇，目标是让每个簇内的数据点尽可能相似，而不同簇之间的数据点尽可能差异明显。K-Means 的执行过程如下：
随机选取 K 个初始中心点。
将每个数据点分配到距离最近的中心点所对应的簇。
更新每个簇的中心点，通常取簇内所有数据点的均值。
重复步骤 2 和 3，直到中心点不再发生变化或达到预设的最大迭代次数。
如下图所示，图中展示了四种不同的聚类数据分布情况，按照从左到右、自上而下的顺序：
图一：簇划分不正确或者簇数量假设错误 图二：数据分布具有各向异性，簇的形状是一个拉长的椭圆形，而不是对称的圆形 图三：各个簇之间的方差不同，绿色簇分布更紧密，而黄色簇分布更稀疏 图四：簇的大小不均匀，黄色簇数据点较少，而紫色簇数据点较多 四种不同的聚类数据分布情况因此，适用于 K-Means 的数据通常满足：
簇是球状且分布均匀 簇的大小相近 簇无明显噪声点或者离群点 数据是各向同性分布 簇的数量已知 数据维度适中 如何确定 K 值 在使用 K-Means 之前，我们需要确定 K 值，即簇的数量。下面是三种常用的确定 K 值的方法：</description></item></channel></rss>