<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>游戏开发 on 元视角</title><link>http://example.org/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</link><description>Recent content in 游戏开发 on 元视角</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 15 Nov 2015 13:07:57 +0000</lastBuildDate><atom:link href="http://example.org/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>解析 OBJ 模型并将其加载到 Unity3D 场景中</title><link>http://example.org/posts/1124152964/</link><pubDate>Sun, 15 Nov 2015 13:07:57 +0000</pubDate><guid>http://example.org/posts/1124152964/</guid><description>&lt;p>各位朋友，大家好，欢迎大家关注我的博客，我是&lt;strong>秦元培&lt;/strong>，我的博客地址是&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。今天想和大家交流的是解析 obj 模型并将其加载到 Unity3D 场景中，虽然我们知道 Unity3D 是可以直接导入 OBJ 模型的，可是有时候我们并不能保证我们目标客户知道如何使用 Unity3D 的这套制作流程，可能对方最终提供给我们的就是一个模型文件而已，所以这个在这里做这个尝试想想还是蛮有趣的呢，既然如此，我们就选择在所有 3D 模型格式中最为简单的 OBJ 模型来一起探讨这个问题吧！&lt;/p></description></item><item><title>Unity3D 游戏开发之 Unity3D 场景编辑器扩展开发</title><link>http://example.org/posts/3019914405/</link><pubDate>Tue, 13 Oct 2015 12:59:01 +0000</pubDate><guid>http://example.org/posts/3019914405/</guid><description>&lt;p>今天博主想和大家分享的是 Unity3D 场景编辑器的扩展开发，相关的话题我们在&lt;a href="http://localhost:4000/2015/03/31/unity3d-plugins-development-application-case/">Unity3D 游戏开发之编辑器扩展程序开发实例&lt;/a>这篇文章中我们已经有所涉及，今天博主想特别针对场景编辑器的扩展开发来进行下深入研究。对于一个场景编辑器来说，它主要的作用是 3D 场景视图中实时显示、输入反馈和相关信息的更新。在 Unity3D 中提供了 Editor、EditorWindow、GUILayout、EditorGUILayout、GUIUtility、EditorGUIUtility、Handles、Event 等来完成这些工作。其中基于 EditorWindow 的这种扩展方式我们已经研究过了，这种扩展方式拥有自己的独立窗口使用 OnGUI 方法进行界面的绘制。&lt;/p></description></item><item><title>Unity3D 游戏场景优化系列之批处理</title><link>http://example.org/posts/927393529/</link><pubDate>Mon, 07 Sep 2015 10:59:13 +0000</pubDate><guid>http://example.org/posts/927393529/</guid><description>&lt;p>各位朋友大家好，我是&lt;strong>秦元培&lt;/strong>，欢迎大家关注我的博客，我的博客地址是&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。最近开始研究 Unity3D 游戏场景优化，每次提及游戏优化这个话题的时候，我的脑海中都会浮现出《仙剑奇侠传六》这个让四路泰坦都光荣陨落的神奇游戏，作为一个使用 Unity3D 引擎进行游戏开发的仙剑玩家，我曾经天真的以为，这款使用 Unity3D 引擎打造的仙剑二十周年献礼之作，会让我对《仙剑奇侠传》这个系列游戏的未来充满更多期待，然而当游戏真正呈现在我眼前的时候，我感受到了在历代仙剑游戏中从未有过的尴尬和失望，我尴尬的是 Unity3D 这样一个比较强大的游戏引擎硬生生地被北软玩成了这个鬼样子，我失望的是这部游戏除了剧情和跳跳乐以外并没有什么让人看到希望的东西。&lt;/p></description></item><item><title>Unity3D 游戏开发游戏读/存档在 Unity3D 中的实现</title><link>http://example.org/posts/887585917/</link><pubDate>Thu, 20 Aug 2015 08:57:10 +0000</pubDate><guid>http://example.org/posts/887585917/</guid><description>&lt;p>大家好，我是秦元培，欢迎大家关注我的博客。近期博客的更新频率基本直降到冰点，因为这段时间实在是忙得没有时间来写博客了。今天想和大家分享的内容是 RPG 游戏中游戏存档的实现，因为最近在做一个 RPG 游戏的项目，所以遇到这个问题就随时记录下来，在对知识进行总结的同时可以将这种思路或者想法分享给大家，这是一件快乐而幸运的事情。我讨厌写按部就班的技术教程，因为我觉得学习是一种自我的探索行为，如果一切都告诉你了，探索的过程便会变得没有意义了。&lt;/p></description></item><item><title>SDL 游戏开发系列第二话：基本图形的绘制</title><link>http://example.org/posts/3789971938/</link><pubDate>Mon, 27 Jul 2015 08:48:59 +0000</pubDate><guid>http://example.org/posts/3789971938/</guid><description>&lt;p>各位朋友，大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是：&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。话题紧接上回，在上回我们讲到了 SDL 的下载、安装和配置并对 SDL 游戏有了初步的了解。我们知道游戏开发中最为基础的内容是图形的绘制，因此在我们学习 SDL 游戏开发的过程中我们同样要从最简单的图形绘制开始学习。在 2D 游戏开发中，精灵（Sprite）是一个基础而核心的内容，具体来讲精灵首先是一张 2D 图片，精灵的绘制从本质上是图片的绘制，所以这是一个基础的内容。因为精灵在 2D 游戏中承担着 GameObject 的重要角色，所以一个图形引擎对精灵的支持好坏会决定游戏设计的最终效果。今天这篇文章主要是通过使用 SDL 中的 SDL_LoadBMP()、SDL_CreateTextureFromSurface()和 SDL_RenderCopy()这三个方法来实现在 SDL 中基本图形的绘制，从整体上尚属较为简单的内容。可是从学习 SDL 游戏开发的角度来看，一切都值得我们深入地去研究。好了，这就开始吧！&lt;/p></description></item><item><title>SDL 游戏开发系列第一话：Hello SDL</title><link>http://example.org/posts/183718218/</link><pubDate>Sat, 25 Jul 2015 15:19:01 +0000</pubDate><guid>http://example.org/posts/183718218/</guid><description>&lt;p>各位读者朋友大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。从今天起博主将带领大家一起走进 SDL 游戏开发的世界，如果说此前的 Unity3D 游戏开发系列文章让大家感受到的是游戏引擎工具化开发的方便与快捷，那么这一次就让我们以 SDL 库为基础，通过了解游戏开发中的底层图形渲染、输入事件响应等内容来全面认识游戏引擎，博主为 SDL 游戏开发系列文章建立了专栏，大家可以通过&lt;a href="http://blog.csdn.net/column/details/sdlgame.html">这里&lt;/a>获取所有的系列文章，希望大家能够喜欢！好了，作为&lt;a href="http://blog.csdn.net/column/details/sdlgame.html"> SDL 游戏开发系列&lt;/a>的第一篇文章，按照技术性文章写作的国际惯例这将是一篇介绍 SDL 入门内容的文章，因此这篇文章叫做：Hello SDL。&lt;/p></description></item><item><title>Unity3D 游戏开发之 SQLite 让数据库开发更简单</title><link>http://example.org/posts/582264328/</link><pubDate>Thu, 09 Jul 2015 09:47:06 +0000</pubDate><guid>http://example.org/posts/582264328/</guid><description>&lt;p>各位朋友大家好，欢迎大家关注我的博客，我是秦元培，我是博客地址是&lt;a href="http://blog.csdn.net/qinyuanpei">http://blog.csdn.net/qinyuanpei&lt;/a>。在经历了一段时间的忙碌后，博主终于有时间来研究新的东西啦，今天博客向和大家一起交流的内容是在 Unity3D 游戏开发中使用 SQLite 进行数据库开发，坦白来讲，在我的技术体系中 Web 和数据库是相对薄弱的两个部分，因此正好这段时间项目需要和服务器、数据库进行交互，因此在接下来的文章中博主可能会更加倾向于讲解这方面的内容，希望大家能够喜欢啊！&lt;/p></description></item><item><title>Unity3D 游戏开发之使用 AssetBundle 和 Xml 实现场景的动态加载</title><link>http://example.org/posts/1467630055/</link><pubDate>Mon, 15 Jun 2015 07:24:17 +0000</pubDate><guid>http://example.org/posts/1467630055/</guid><description>&lt;p>各位朋友，大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是&lt;a href="http://qinyuanpei.com">http://qinyuanpei.com&lt;/a>。 今天我想和大家聊聊在 Unity3D 中关于场景的动态加载的问题。众所周知在 Unity3D 游戏开发过程中，因为受到游戏容量、平台性能和热更新等诸多因素的限制，我们可能无法将所有的游戏场景打包到项目中然后相对&amp;quot;静态&amp;quot;地加载，那么这个时候就需要我们使用动态加载的方式来将游戏场景加载到场景中。博主在研究了 Unity3D 动态加载的相关资料后发现，目前 Unity3D 中实现动态加载场景的方式主要有以下两种方式：&lt;/p></description></item><item><title>Unity3D 游戏开发之快速打造流行的关卡系统</title><link>http://example.org/posts/1424645834/</link><pubDate>Thu, 11 Jun 2015 08:11:01 +0000</pubDate><guid>http://example.org/posts/1424645834/</guid><description>&lt;p>各位朋友，大家好，欢迎大家关注我的博客，我是秦元培，我的博客地址是&lt;a href="blog.csdn.net/qinyuanpei">blog.csdn.net/qinyuanpei&lt;/a>。
今天想和大家分享的是目前在移动平台上较为流行的关卡系统，关卡系统通常是单机手机游戏如《愤怒的小鸟》、《保卫萝卜》中对游戏内容的组织形式，玩家可通过已解锁的关卡(默认第一关是已解锁的)获取分数进而解锁新的关卡，或者是通过付费购买解锁新的关卡。那么好了，在今天的文章中博主将带领大家快速实现一个可扩展的关卡系统，这个实例的灵感来自博主最近的工作经历，希望对大家学习 Unity3D 游戏起到一定帮助性的作用。&lt;/p></description></item><item><title>Unity3D 游戏开发之反编译 AssetBundle 提取游戏资源</title><link>http://example.org/posts/2799263488/</link><pubDate>Thu, 02 Apr 2015 20:37:52 +0000</pubDate><guid>http://example.org/posts/2799263488/</guid><description>&lt;p>各位朋友，大家好，欢迎大家关注我的博客，我是秦元培，我的博客地址是：&lt;a href="https://blog.yuanpei.me">https://blog.yuanpei.me&lt;/a> ，今天我们来说说通过反编译 Unity3D 的 AssetBundle 来提取游戏资源，博主写这篇文章的目的并非是要教大家如何去破解一款基于 Unity3D 引擎开发的游戏，而是想通过今天这篇文章来告诉大家如何在开发 Unity3D 游戏的过程中保护自己的游戏资源。&lt;/p></description></item><item><title>Unity3D 游戏开发之编辑器扩展程序开发实例</title><link>http://example.org/posts/70687890/</link><pubDate>Tue, 31 Mar 2015 00:53:22 +0000</pubDate><guid>http://example.org/posts/70687890/</guid><description>&lt;p>各位朋友大家好，欢迎关注我的博客，我的博客地址是&lt;a href="http://www.qinyuanpei.com">http://www.qinyuanpei.com&lt;/a>。今天我们来说说如何在 Unity3D 中为编辑器开发扩展程序。提到扩展程序，相信大家都不会陌生了。不管是 Google 的 Chrome 浏览器还是经典的 FireFox，这些浏览器最为人所称道的就是它支持各种各样的扩展。扩展程序是一种插件，它遵循插件式设计的原则，可以随时在宿主程序中安装、卸载而不会影响宿主程序的正常运行。我们知道在 Unity3D 中有各种各样的插件，如 NGUI、2DToolKit、EasyTouch 等等都是一种扩展程序。扩展程序在丰富宿主程序功能的基础上，可以帮助宿主程序完成大量额外的工作。可以说正是因为 Unity3D 拥有大量的插件和资源支持，Unity3D 才能够受到大家如此的追捧。可是作为一个有节操的程序员，如果仅仅会使用工具，那么我们和普通用户有什么区别啊，所以在今天的文章中博主将通过三个具体的实例来教大家如何为 Unity3D 的编辑器开发扩展程序，希望对大家学习 Unity3D 技术有所帮助！&lt;/p></description></item><item><title>从「复活」和「暂停/恢复」谈游戏数据配置管理</title><link>http://example.org/posts/3356910090/</link><pubDate>Fri, 27 Mar 2015 02:12:58 +0000</pubDate><guid>http://example.org/posts/3356910090/</guid><description>&lt;p>随着游戏制作技术的不断发展，在经历了从 2D 到 3D、从单机到网游、从 PC 游戏到移动游戏的种种演变后，玩家对于游戏质量的要求越来越高，游戏制作的难度相应地增加，整个游戏研发的体系开始变得庞大而复杂，由此就产生了游戏数据配置和管理的相关问题。本文将从游戏中的&amp;quot;复活&amp;quot;和&amp;quot;暂停/恢复&amp;quot;这两个应用场景的角度来谈谈在游戏开发中如何对游戏中的数据进行管理和配置。&lt;/p></description></item><item><title>使用 Unity3D 创建一个幸运转盘</title><link>http://example.org/posts/3449402269/</link><pubDate>Thu, 12 Mar 2015 19:13:38 +0000</pubDate><guid>http://example.org/posts/3449402269/</guid><description>&lt;p>今天我们来做点和游戏无关的事情吧！博主最近情绪一直比较低落，因为在找工作的过程中遇到了些挫折。当一个人内心缺乏斗志的时候，通常会难以静下心来认真地做事情，所以这段时间博主并不打算再去为大家分享新的游戏案例，希望大家能够谅解啊。&lt;/p></description></item><item><title>使用 Love2D 引擎开发贪吃蛇游戏</title><link>http://example.org/posts/426338252/</link><pubDate>Tue, 10 Mar 2015 10:51:19 +0000</pubDate><guid>http://example.org/posts/426338252/</guid><description>&lt;p>今天来介绍博主最近捣腾的一个小游戏“贪吃蛇”。“贪吃蛇”这个游戏相信大家都不会感到陌生吧。今天博主将通过&lt;a href="http://love2d.org/">Love2D&lt;/a>这款游戏引擎来为大家实现一个简单的贪吃蛇游戏,在本篇文章当中我们将会涉及到“贪吃蛇”的基本算法、Lua 语言编程等基本的内容，希望能够对大家开发类似的游戏提供借鉴和思考，文章中如有不足之处，还希望大家能够谅解，因为博主的游戏开发基本就是这样慢慢摸索着学习，所以难免会有不足的地方。&lt;/p></description></item><item><title>使用 Mecanim 动画系统来控制 2D 动画</title><link>http://example.org/posts/2583252123/</link><pubDate>Wed, 11 Feb 2015 13:35:58 +0000</pubDate><guid>http://example.org/posts/2583252123/</guid><description>&lt;p>各位朋友，大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是&lt;a href="http://blog.csdn.net/qinyuanpei">http://blog.csdn.net/qinyuanpei&lt;/a>。今天我想和大家分享的话题是在 Unity3D 中使用 Mecanim 动画系统来控制 2D 动画。&lt;/p></description></item><item><title>当 Unity3D 游戏开发遇上 Excel</title><link>http://example.org/posts/906436376/</link><pubDate>Sun, 25 Jan 2015 19:41:57 +0000</pubDate><guid>http://example.org/posts/906436376/</guid><description>各位朋友，大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是http://blog.csdn.net/qinyuanpei。今天我们来聊聊常用办公软件 Excel 和游戏开发那不为人知的秘密。今天的内容将涉及到 Excel 在游戏开发中的应用以及如何利用程序解析 Excel 中的数据。作为常用的办公软件的 Excel 相信大家都不陌生啦。可是如果我们认为 Excel 只是办公软件的话，那么这就不只是天真而是 Out 了。事实上 Excel 和游戏开发有着密切的联系，不知道大家还记不记得那款利用 Excel 开发出来的三国杀，这可能是 Excel 第一次以游戏开发的身份出现在大家面前吧。我们知道在游戏开发领域有一种工作叫做策划，就像在软件开发领域有一种工作叫做产品经理一样。而在诸多的策划工作中，数值策划是一个可以直接影响游戏进程的工作，因为数值策划体现了一个游戏在整体数值上的平衡，设计者需要维护好这样一个平衡，确保游戏外的玩家和游戏里的敌人面对的是同一个公平的虚拟世界。
例如，在《仙剑奇侠传四》这款游戏中，韩菱纱在游戏后期的速度可以说是完全打破了游戏的平衡性，因为韩菱纱本身的速度就比较快，再加上仙风云体术的加速效果完全对玄霄产生了戏剧性压制，导致在游戏结尾的 Boss 战中经常是韩菱纱出手 N 次后才挨到玄霄出手，我们知道韩菱纱的乾坤一掷每次消耗气 15，可是因为韩菱纱的速度足够快，所以韩菱纱完全可以通过普通物理攻击快速地积满气进而施展乾坤一掷，这就是游戏的平衡性被打破了呀，更不要说这部游戏里最为经典的千方残光剑 Bug 了，这同样是游戏平衡性的问题，归根到底是紫英的这个技能在配置数据时出现了错误，这充分说明数据的正确合理与否是会对游戏产生重要影响的。
慕容紫英千方残光剑韩菱纱乾坤一掷尽管我们可以使用 Xml、Json、ini、数据库等存储形式来存储这些数据，可是毫无疑问的是，Excel 是 Window 平台上最好的数据处理软件，因此数值策划更倾向于使用 Excel 来设计游戏中的数据，面对如此重要的数值策划工作，我们自然希望在解析 Excel 文件时不会出现错误，可是我们总不能指望着策划把 Excel 数据转换成我们能处理的数据类型吧，因此就有了博主今天的这篇文章，所以在今天的文章中我们主要的内容就是如何通过程序来解析 Excel 文件。
项目需求 最近博主一个朋友向我抱怨，说手头上有好几百个 Excel 工作表要处理，大概几十万条数据吧。原因是当时公司分配任务时交待不清，等到了向公司交接数据的时候，朋友忽然发现这些 Excel 文件的表格格式和公司规定的不一样啊。这可急坏了博主的这位朋友，博主的朋友只好不断地的复制、黏贴，因为这些数据是分布在不同的数据表里，朋友整天都忙得焦头烂额，可是即使这样效率还是得不到保证啊，朋友最后找到了博主这里，问我能不能编写程序帮他解决这个问题。因为平时经常与技术圈子里的朋友聊天，所以在博主印象里 Excel 的解析在游戏开发中还是较为常见的，而且博主知道对于微软的 Office 办公软件是可以通过 VBA 编程来实现某些功能的，可是因为博主一直在用国产的 WPS，所以对于 Excel 的解析基本上是停留在一个概念性的认识上，可是朋友的忙不能不帮不是，所以博主决定借着这个机会好好研究下 Excel 文件的解析。
解决方案 因为博主在之前并没有过解析 Excel 文件的经历，所以博主就到 Github 上淘了些开源项目。和很多人爱逛天猫、淘宝的经历类似，如果你发现有一个人经常喜欢到 Github 上晃荡、喜欢关注技术类的博客或者资讯、经常再看 PDF 版的技术文档或书籍，请千万不要怀疑，这个人绝对是程序员。哈哈，好了，玩笑就此打住啊。经过博主对这些开源项目的简单分析和整理，目前，对 Excel 文件解析的解决方案主要有以下三种：</description></item><item><title>Unity3D 塔防游戏开发项目讲解(下)</title><link>http://example.org/posts/1176959868/</link><pubDate>Wed, 21 Jan 2015 13:50:48 +0000</pubDate><guid>http://example.org/posts/1176959868/</guid><description>&lt;p>各位朋友，大家好，我是秦元培，欢迎大家关注我的博客，我的博客地址是&lt;a href="http://blog.csdn.net/qinyuanpei">http://blog.csdn.net/qinyuanpei&lt;/a>。我们知道一个完整的塔防游戏由地图、敌人、防守单位三个部分组成，在上一篇文章中我们已经对地图这块儿进行了全面的讲解，今天我们来说说敌人和防守单位。&lt;/p></description></item></channel></rss>